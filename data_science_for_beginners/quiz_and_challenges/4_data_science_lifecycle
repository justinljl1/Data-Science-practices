### 14_introduction ###
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv('Y:/Data_Science_For_Beginners/4_data_science_lifecycle/taxi.csv')

print(df.head())
print(df.info())
df.shape

# Get month/season information
df['tpep_pickup_datetime'] = pd.to_datetime(df['tpep_pickup_datetime'])  # Conver object type to datetime type
df['month'] = df['tpep_pickup_datetime'].dt.month

def get_season(x):
    if x <= 5:
        return 'Spring'
    elif 5 < x <= 8:
        return 'Summer'
    elif 8 < x <= 11:
        return 'Fall'
    else:
        return 'Winter'

df['season'] = df['month'].apply(get_season)
df = df[df['payment_type'] == 1.0]
df.head()

# Plot tip mean by month with bar plot
tip_mean = df.groupby('month')['tip_amount'].mean()
tip_mean.plot(kind='bar')
plt.title('Mean of tip by month')
plt.xlabel('Month')
plt.ylabel('Tip mean')
plt.show()

# Plot tip by month with scatter plot
sns.relplot(x='month', y='tip_amount', hue='month', data=df, palette='Set1')
plt.title('Mean of tip by month')
plt.xlabel('Month')
plt.ylabel('Tip mean')
plt.show()

# Perform t-test
jan_data = df[df['month'] == 1]['tip_amount']
jul_data = df[df['month'] == 7]['tip_amount']
t_stat, p_value = stats.ttest_ind(jan_data, jul_data)
print(f"T-statistic: {t_stat}")
print(f"P-value: {p_value}")

## Conclusion:
# Assuming tips in Jan and July stands for tips in corresponding season, based on the analysis results, there seems to be no difference in passenger tips from winter and summer;
# To answer the question more accurately, tip info from differnt months/years are needed (can be downloaded). Also, cash tips info should also be included if possible.



### 15_analyzing ###
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

path = 'Y:/Data_Science_For_Beginners/4_data_science_lifecycle/taxi.csv'
df = pd.read_csv(path)
df = df[df['payment_type'] == 1.0]

print(df.describe())
df

# Does vendor affect tip amount?
sns.regplot(x='VendorID', y='tip_amount', data=df)

plt.xlabel("Vendor ID")
plt.ylabel("Tip Amount")
plt.show()

# Does passenger count affect tip amount?
sns.barplot(x='passenger_count', y='tip_amount', data=df, hue='passenger_count', palette='Set1')
sns.stripplot(x='passenger_count', y='tip_amount', data=df, color='grey', alpha=0.5)

plt.xlabel("Passenger Count")
plt.ylabel("Tip Amount")
plt.show()

# Does trip distance affect tip amount?
sns.regplot(x='trip_distance', y='tip_amount', data=df)

plt.xlabel("Trip Distance")
plt.ylabel("Tip Amount")
plt.show()

# Does toll amount affect tip amount?
sns.regplot(x='tolls_amount', y='tip_amount', data=df)

plt.xlabel("Tolls Amount")
plt.ylabel("Tip Amount")
plt.show()

# Does trip distance affect total amount?
sns.regplot(x='trip_distance', y='total_amount', data=df)

plt.xlabel("Trip Distance")
plt.ylabel("Total Amount")
plt.show()

# Does congestion affect tip amount?
sns.regplot(x='congestion_surcharge', y='tip_amount', data=df)

plt.xlabel("Congestion Surcharge")
plt.ylabel("Tip Amount")
plt.show()



### 16_communication ###
